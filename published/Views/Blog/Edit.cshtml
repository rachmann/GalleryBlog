@using GalleryBlog.Extensions
@model GalleryBlog.Models.Post

@{
    ViewBag.Title = "Edit";

    //Html.RegisterStyles("~/Content/froala/froala_editor.min.css");
}
<div class="col-sm-10">
    <h2>Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Post</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Subject, new { @class = "form-control", style="width: 80%; min-height: 60px;" })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Body)
                    @*@Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Meta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Meta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Meta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UrlSlug, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UrlSlug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UrlSlug, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Approved, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Approved, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Approved, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Modified, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Modified, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Modified, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default btn-sm" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning btn-sm" })
                </div>
            </div>
        </div>
        <div class="hidden">
            @*@Html.HiddenFor(model => model.Body, new { id = "hiddenBody" })*@
            @Html.HiddenFor(model => model.Id, new { id = "hiddenId" })
        </div>


    }

    <div>

    </div>
</div>
<script type="text/javascript">
    $(function () {

 //       var body = $('#hiddenBody').val();
        var modelId = $('#hiddenId').val();

        $('#Body').editable({
            buttons: ["bold", "italic", "underline", "strikeThrough", "fontFamily",
                "fontSize", "color", "formatBlock", "align", "insertOrderedList",
                "insertUnorderedList", "outdent", "indent", "selectAll", "createLink",
                "insertImage", "insertVideo", "undo", "redo", "html", "save", "inserthorizontalrule"],
            inlineMode: false,
            inverseSkin: true,
            preloaderSrc: '@Url.Content("~/Content/Images/app/loader.gif")',
            allowedImageTypes: ["jpeg", "jpg", "png"],
            height: 300,
            language: "en",
            direction: "ltr",
            fontList: ["Tahoma, Geneva", "Arial, Helvetica", "Impact, Charcoal"],
            autosave: true,
            autosaveInterval: 2500,
            saveURL: '@Url.Action("FroalaAutoSave", "Blog")',
            saveParams: { postId: modelId },
            spellcheck: true,
            plainPaste: true,
            imageButtons: ["removeImage", "replaceImage", "linkImage"],
            borderColor: '#00008b',
            imageUploadURL: '@Url.Action("FroalaUploadImage", "Blog")',
            imageParams: { postId: modelId },
            enableScript: false
    });

//        $('#Editor1').editable("setHTML", body, false);
//        $("#Editor1").editable("sync");

        });
</script>

@section Scripts {

    @Scripts.Render("~/bundles/froala")
}
